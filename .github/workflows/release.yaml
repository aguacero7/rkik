name: Release & Publish

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    name: Build and Deploy All Artifacts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install packaging tools
        run: |
          sudo apt update && sudo apt install -y rpm build-essential
          cargo install cargo-deb
          cargo install cargo-generate-rpm
          cargo install cross --locked


      - name: Build release binary
        run: cargo build --release

      - name: Generate .deb package
        run: cargo deb

      - name: Generate .rpm package
        run: cargo generate-rpm

      - name: Build Linux x86_64 # Build native linux
        run: cross build --release --target x86_64-unknown-linux-gnu

      - name: Build Windows x86_64 # windows cross compilation
        run: cross build --release --target x86_64-pc-windows-gnu


      - name: Prepare Archives
        run: |
          mkdir -p dist
          
          cp target/x86_64-unknown-linux-gnu/release/rkik dist/rkik-linux-x86_64
          cp target/x86_64-pc-windows-gnu/release/rkik.exe dist/rkik-windows-x86_64.exe
          
          tar -czvf rkik-linux-x86_64.tar.gz -C dist rkik-linux-x86_64
          zip rkik-windows-x86_64.zip dist/rkik-windows-x86_64.exe

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            rkik-linux-x86_64.tar.gz
            rkik-windows-x86_64.zip
            dist/rkik-linux-x86_64
            dist/rkik-windows-x86_64.exe
            target/debian/*.deb
            target/generate-rpm/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to crates.io
        if: github.event.release.prerelease == false
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
